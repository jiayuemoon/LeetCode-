题目：

判断一个 9x9 的数独是否有效。只需要根据以下规则，验证已经填入的数字是否有效即可。
数字 1-9 在每一行只能出现一次。
数字 1-9 在每一列只能出现一次。
数字 1-9 在每一个以粗实线分隔的 3x3 宫内只能出现一次。

说明:
一个有效的数独（部分已被填充）不一定是可解的。
只需要根据以上规则，验证已经填入的数字是否有效即可。
给定数独序列只包含数字 1-9 和字符 '.' 。
给定数独永远是 9x9 形式的。

class Solution {
public:
    bool isValidSudoku(vector<vector<char>>& board) {
        //按照3个判断规则依次判断
        bool flag=true;
        
        //按行
        for(int i=0;i<board.size();i++){
            map<char,int> m;
            for(int j=0;j<board[i].size();j++){
                if(board[i][j]!='.'){
                    if(m[board[i][j]]==0){
                        m[board[i][j]]=1;
                    }
                    else{
                        return false;
                    }
                }
            }
        }
        cout<<"true"<<endl;
        //按列
        for(int i=0;i<9;i++){
            map<char,int> m;
            for(int j=0;j<9;j++){
                if(board[j][i]!='.'){
                    if(m[board[j][i]]==0){
                        m[board[j][i]]=1;
                    }
                    else{
                        return false;
                    }
                }
            }
        }
        cout<<"true"<<endl;
        //按3*3的格子
        for(int i=0;i<9;i=i+3){
            for(int j=0;j<9;j=j+3){
                map<char,int> m;
                for(int k=i;k<i+3;k++){
                    for(int t=j;t<j+3;t++){
                        if(board[k][t]!='.'){
                            if(m[board[k][t]]==0){
                                m[board[k][t]]=1;
                            }
                            else{
                                return false;
                            }
                        }
                    }
                }
            }
        }
        cout<<"true"<<endl;
        return flag;
    }
};
