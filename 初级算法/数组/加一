题目：

给定一个由整数组成的非空数组所表示的非负整数，在该数的基础上加一。
最高位数字存放在数组的首位， 数组中每个元素只存储单个数字。
你可以假设除了整数 0 之外，这个整数不会以零开头。

class Solution {
public:
    vector<int> plusOne(vector<int>& digits) {
        
        //方法1：
        //易想到的方法：将数组转换成数字，然后加一再转成数组
        //方法2:
        //利用数组的性质，一位一位的加上去，类似模拟一个加法器
        int flag=1;
        int temp;
        vector<int> ans;
        for(int i=digits.size()-1;i>=0;i--){
            temp=digits[i]+flag;
            if(temp>=10){
                flag=1;
                ans.push_back(temp%10);
            }
            else{
                flag=0;
                ans.push_back(temp);
            }
        }
        //最高位尚有进位
        if(flag==1){
            ans.push_back(flag);
        }
        reverse(ans.begin(),ans.end());
        return ans;
    }
};
