题目：

给定一个整数数组，判断是否存在重复元素。
如果任何值在数组中出现至少两次，函数返回 true。如果数组中每个元素都不相同，则返回 false。


class Solution {
public:
    bool containsDuplicate(vector<int>& nums) {
         
        /*方法1*/
        
        //最简单的方法对数组排序，然后依次判断一个元素是否与其前一个元素相同，若相同，跳出循环返回true
        sort(nums.begin(),nums.end());
        if(nums.size()<=1)
            return false;
        bool flag=false;
        for(int i=1;i<nums.size();i++){
            if(nums[i]==nums[i-1]){
                flag=true;
                break;
            }
        }
        return flag;
        
        /*方法2*/
        
        //如果要求不能改变数组中的元素，则不能使用以上方法
        //用map映射存储数组中的值和该值出现的次数
        
        if(nums.size()<=1)
            return false;
        map<int,int> m;
        m[nums[0]]=1;
        for(int i=1;i<nums.size();i++){
            //从未出现过
            if(m[nums[i]]==0){
                m[nums[i]]=1;
            }
            else{
                return true;
            }
        }
        return false;
    }
};
