题目：

给出一个 32 位的有符号整数，你需要将这个整数中每位上的数字进行反转。
假设我们的环境只能存储得下 32 位的有符号整数，则其数值范围为 [−231,  231 − 1]。请根据这个假设，如果反转后整数溢出那么就返回 0。


class Solution {
public:
    int reverse(int x) {
        //首先排除特殊情况
        if(x==0||x>2147483647||x<-2147483648)
            return 0;
        //计算x的位数，然后取余依次得到每一位数字，求和(不需要对正数和负数分开处理)
        int sum=0;
        int count=0;
        int t=x;
        
        while(t!=0){
            t/=10;
            count++;
        }
        int j=count-1;
        t=x;
        cout<<j<<endl;
        while(j>=0){
            sum+=t%10*pow(10,j);
            //中途发生溢出
            //这里存疑，为什么不加等号时输入-2147483648依旧输出-2147483648？？？
            if(sum>=2147483647||sum<=-2147483648||(sum>0&&x<0)||(sum<0&&x>0))
                return 0;
            t/=10;
            j--;
        }
        return sum;
    }
};
